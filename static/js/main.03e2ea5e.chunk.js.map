{"version":3,"sources":["types/enums.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","onSelectTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","filter","onSelect","query","onChangeQuery","value","onChange","event","target","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","selectedUser","setSelectedUser","useEffect","userId","href","email","name","App","setQuery","setTodos","setFilter","selectedTodo","setSelectedTodo","visibleTodos","preparedTodos","searchQuery","trim","toLowerCase","includes","console","log","prepareTodos","data","item","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03e2ea5e.chunk.js","sourcesContent":["export enum Filter {\n  active = 'active',\n  completed = 'completed',\n  all = 'all',\n}\n","/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSelectTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, onSelectTodo }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { Filter } from '../../types/enums';\n\ntype Props = {\n  query: string,\n  onChangeQuery: (query: string) => void,\n  filter: Filter,\n  onSelect: (value: Filter) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  onSelect,\n  query,\n  onChangeQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          value={filter}\n          data-cy=\"statusSelect\"\n          onChange={(event) => onSelect(event.target.value as Filter)}\n        >\n          <option value={Filter.all}>All</option>\n          <option value={Filter.active}>Active</option>\n          <option value={Filter.completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => onChangeQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        <button\n          data-cy=\"clearSearchButton\"\n          type=\"button\"\n          className=\"delete\"\n        />\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  onClose: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo.userId) {\n      getUser(todo.userId).then(setSelectedUser);\n    }\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={selectedUser.email}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/enums';\n\nconst prepareTodos = (todos: Todo[], query: string, filter: Filter) => {\n  let preparedTodos = [...todos];\n\n  if (query) {\n    const searchQuery = query.trim().toLowerCase();\n\n    preparedTodos = preparedTodos.filter(todo => todo.title.toLowerCase().includes(searchQuery));\n  }\n\n  console.log(query, filter);\n\n  return preparedTodos;\n};\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState<Filter>(Filter.all);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const visibleTodos = prepareTodos(todos, query, filter);\n\n  const handleSelect = (item: Filter) => {\n    setFilter(item);\n  };\n\n  useEffect(() => {\n    getTodos().then((data) => setTodos(data));\n  }, []);\n\n  console.log(selectedTodo);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                onSelect={handleSelect}\n                onChangeQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    onSelectTodo={setSelectedTodo}\n                  />\n                )\n                : (<Loader />)}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}